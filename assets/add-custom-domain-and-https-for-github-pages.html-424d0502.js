import{_ as s,p as n,q as d,s as t,R as e,t as a,w as r,Y as i,n as h}from"./framework-aa5c4115.js";const c="/imgs/github/add-custom-domain-and-https-for-github-pages/1.png",p="/imgs/github/add-custom-domain-and-https-for-github-pages/2.png",g="/imgs/github/add-custom-domain-and-https-for-github-pages/3.png",m="/imgs/github/add-custom-domain-and-https-for-github-pages/4.png",u="/imgs/github/add-custom-domain-and-https-for-github-pages/5.png",l="/imgs/github/add-custom-domain-and-https-for-github-pages/6.png",b="/imgs/github/add-custom-domain-and-https-for-github-pages/7.png",_="/imgs/github/add-custom-domain-and-https-for-github-pages/8.png",f="/imgs/github/add-custom-domain-and-https-for-github-pages/9.png",x={},v={href:"https://pages.github.com",target:"_blank",rel:"noopener noreferrer"},G={href:"http://getbootstrap.com",target:"_blank",rel:"noopener noreferrer"},P={href:"https://reactjs.org",target:"_blank",rel:"noopener noreferrer"},k=i('<h2 id="实验" tabindex="-1"><a class="header-anchor" href="#实验" aria-hidden="true">#</a> 实验</h2><p>既然是自定义域名，那么首先要准备一个域名才行，我将以自己在阿里云上购买的<code>tsq.me</code>域名的二级域名<code>foo.tsq.me</code>为例。如果你没有域名，同时也想做下面的实验，建议你前往阿里云花个几块钱买个新域名，有些域名，比如说以xyz结尾的，我记得最便宜一年只要5块钱。</p><p>接下来的实验，我们将首先在Github上新建一个仓库，名叫<code>foo</code>，并新建一个<code>index.html</code>来快速生成一个网站，之后我们将在阿里云域名解析后台新增解析，将它指向Github提供的四个IP地址，最后我们要回到仓库的设置页，进行配置并开启HTTPS，下面我们来看具体每一步的操作。</p><h2 id="第一步-快速生成静态网站" tabindex="-1"><a class="header-anchor" href="#第一步-快速生成静态网站" aria-hidden="true">#</a> 第一步：快速生成静态网站</h2><p>如下图，我们首先利用Github创建一个仓库名叫<code>foo</code>，需要注意的是，仓库需要为<strong>Public</strong>才行。</p><p><img src="'+c+'" alt=""></p><p>仓库创建完毕后，我们就回到了这个仓库位于Github的主页，我将直接在Github上创建两个文件，一个是<code>CNAME</code>，用于填写自定义域名，一个是<code>index.html</code>，用来模拟一个静态网站的首页。</p><p>首先如下图，点击<code>creating a new file</code>。 <img src="'+p+'" alt=""></p><p>接着，创建一个文件，名称叫<code>CNAME</code>，内容为<code>foo.tsq.me</code>（<em>修改为你自己的二级域名</em>），如下图：</p><p><img src="'+g+'" alt=""></p><p>接着，如下图，点击<code>Create new file</code>按钮 。</p><p><img src="'+m+'" alt=""></p><p>创建一个文件，名称叫<code>index.html</code>，内容为<code>hello world</code>，如下图：</p><p><img src="'+u+'" alt=""></p><p>至此，demo项目创建完毕。</p><h2 id="第二步-配置域名解析" tabindex="-1"><a class="header-anchor" href="#第二步-配置域名解析" aria-hidden="true">#</a> 第二步：配置域名解析</h2><p>接下来，我们来为这个foo项目配置自定义域名。我将利用二级域名： <code>foo.tsq.me</code>来做演示。我们回到阿里云域名解析控制台，为域名新增如下图所示的四条A记录解析：</p><p><img src="'+l+'" alt=""></p>',18),w={href:"https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site",target:"_blank",rel:"noopener noreferrer"},T=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>185.199.108.153 
185.199.109.153 
185.199.110.153 
185.199.111.153
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就完成了第二步。接来是最后一步，我们需要再次回到foo仓库位于Github的设置页。</p><h2 id="第三步-配置自定义域名" tabindex="-1"><a class="header-anchor" href="#第三步-配置自定义域名" aria-hidden="true">#</a> 第三步：配置自定义域名</h2><p>点击，<code>Pages</code>菜单项，在<code>Branch</code>的地方，我们选择<code>main</code>分支，然后点击<code>Save</code>，如下图所示：</p><p><img src="`+b+'" alt=""></p><p>保存之后，下面会显示我们在CNAME中填写的二级域名，并提示我们正在进行DNS校验（<em>如果你正确完成了第二步操作，页面也有可能会显示DNS解析未成功的消息，可以忽略这个消息。</em>）DNS校验完成之后，我们就来校验下解析是否成功。在浏览器中输入自己的二级域名，最终会出现<code>index.html</code>中的<code>hello world</code>（没出现的话，可以多刷新几次），如下图所示：</p><p><img src="'+_+'" alt=""></p><p>最后，我们回到设置页，勾选<code>Enforce HTTPS</code>，这样我们的二级域名就支持https了，证书由Github免费提供并托管，如下图所示：</p><p><img src="'+f+'" alt=""></p><p>至此，我们就完成了自定义域名以及HTTPS的配置。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>',11),N={href:"https://help.github.com/en/github/working-with-github-pages/about-github-pages",target:"_blank",rel:"noopener noreferrer"};function S(C,E){const o=h("ExternalLinkIcon");return n(),d("div",null,[t("p",null,[t("a",v,[e("Github Pages"),a(o)]),e("是由Github推出的免费静态文件托管服务，目前很多网站都是在使用它，比如说著名的： "),t("a",G,[e("http://getbootstrap.com"),a(o)]),e("和 "),t("a",P,[e("https://reactjs.org"),a(o)]),e("。为一个Github仓库开启Github Pages功能，会涉及Github Pages制定的一系列规范，例如：仓库类型、仓库名、分支名、文件夹名、CNAME文件、HTTPS等等。自己的体会是，要想完全弄明白其中的规则，还是要花很多时间去阅读相应的文档以及动手做实验才行。最近自己为某个项目配置了自定义域名并开启了HTTPS，遇到了一些坑，也积累了一些经验，所以这篇文章就来分享一下如何为一个Github仓库开启自定义域名并配置免费的HTTPS证书。")]),r(" more "),k,t("p",null,[e("这四个IP的来源可以参考这篇官方文档： "),t("a",w,[e("https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site"),a(o)]),e("。")]),T,t("p",null,[e("Github Pages是一个非常棒且免费的静态网站托管工具，在实验过程中，我们利用一个index.html快速生成了一个网站，并为其配置自定义域名及https。如果你对其中的规则感兴趣，可以参考这篇文档: "),t("a",N,[e("https://help.github.com/en/github/working-with-github-pages/about-github-pages"),a(o)]),e("。")])])}const A=s(x,[["render",S],["__file","add-custom-domain-and-https-for-github-pages.html.vue"]]);export{A as default};
